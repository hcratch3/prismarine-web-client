{"version":3,"file":"MessageFormattedString-e33a3d11.js","sources":["../../src/react/MessageFormattedString.tsx"],"sourcesContent":["import { useMemo } from 'react'\nimport { fromFormattedString } from '@xmcl/text-component'\nimport { formatMessage } from '../botUtils'\nimport MessageFormatted from './MessageFormatted'\n\n/** like MessageFormatted, but receives raw string or json instead, uses window.loadedData */\nexport default ({ message }: { message: string | Record<string, any> | null }) => {\n  const messageJson = useMemo(() => {\n    if (!message) return null\n    try {\n      return formatMessage(typeof message === 'string' ? fromFormattedString(message) : message)\n    } catch (err) {\n      console.error(err) // todo ensure its being logged\n      return null\n    }\n  }, [message])\n\n  return messageJson ? <MessageFormatted parts={messageJson} /> : null\n}\n"],"names":["MessageFormattedString$1","message","messageJson","useMemo","formatMessage","fromFormattedString","err","jsx","MessageFormatted"],"mappings":"2LAMA,MAAAA,EAAA,CAAA,CAAA,QAAAC,CAAA,IAAA,CACE,MAAAC,EAAAC,EAAAA,QAAA,IAAA,CACE,GAAA,CAAAF,EAAc,OAAA,KACd,GAAA,CACE,OAAAG,EAAA,OAAAH,GAAA,SAAAI,EAAAJ,CAAA,EAAAA,CAAA,CAAyF,OAAAK,EAAA,CAEzF,eAAA,MAAAA,CAAA,EACA,IAAO,CACT,EAAA,CAAAL,CAAA,CAAA,EAGF,OAAAC,EAAAK,EAAAC,EAAA,CAAA,MAAAN,CAAA,CAAA,EAAA,IACF"}